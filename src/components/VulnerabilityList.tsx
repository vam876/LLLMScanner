import React from 'react';
import { ErrorIcon, WarningIcon, SuccessIcon } from './Icons';

export interface Vulnerability {
  ip: string;
  port: number;
  service: string;
  status: string;
  vulnerability: string;
  timestamp: string;
  details: string;
  response: string;
  url: string;
}

export interface VulnerabilityListProps {
  vulnerabilities: Vulnerability[];
  onVulnerabilitySelect?: (vulnerability: Vulnerability) => void;
  onVulnerabilitiesChange?: (vulnerabilities: Vulnerability[]) => void;
}

const VulnerabilityList: React.FC<VulnerabilityListProps> = ({ 
  vulnerabilities = [], 
  onVulnerabilitySelect 
}) => {
  if (!vulnerabilities || vulnerabilities.length === 0) {
    return (
      <div className="empty-state">
        <p>暂无漏洞信息</p>
      </div>
    );
  }

  const getStatusIcon = (status: string) => {
    switch (status.toLowerCase()) {
      case 'high':
        return <ErrorIcon />;
      case 'medium':
        return <WarningIcon />;
      case 'low':
        return <SuccessIcon />;
      default:
        return <ErrorIcon />;
    }
  };

  return (
    <div className="vulnerability-list">
      {vulnerabilities.map((vuln, index) => (
        <div 
          key={`${vuln.ip}-${vuln.port}-${index}`} 
          className="vulnerability-item"
          onClick={() => onVulnerabilitySelect && onVulnerabilitySelect(vuln)}
        >
          <div className="vulnerability-icon">
            {getStatusIcon(vuln.status)}
          </div>
          <div className="vulnerability-content">
            <h3>{vuln.vulnerability}</h3>
            <div className="vulnerability-details">
              <span>{vuln.service}</span>
              <span>{vuln.ip}:{vuln.port}</span>
              <span>{new Date(vuln.timestamp).toLocaleString()}</span>
            </div>
          </div>
        </div>
      ))}
    </div>
  );
};

export default VulnerabilityList;
